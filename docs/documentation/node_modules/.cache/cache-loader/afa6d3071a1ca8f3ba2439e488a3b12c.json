{"remainingRequest":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/babel-loader/lib/index.js??ref--8-1!/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/docs/Logging.md","dependencies":[{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/docs/Logging.md","mtime":1595328387868},{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/.docusaurus/docusaurus-plugin-content-docs/site-docs-logging-md-83e.json","mtime":1595328389612},{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL0FwcGxpY2F0aW9ucy9NQU1QL2h0ZG9jcy9DS08gRmlsZXMvQ0tPX1Byb2plY3RzL2RvY3VzYXVydXMvZG90bmV0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17fTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6IkxvZ2dpbmciLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiTG9nZ2luZyIsImRlc2NyaXB0aW9uIjoiVGhlIENoZWNrb3V0LmNvbSBTREsgZm9yIC5ORVQgdXNlcyBMaWJMb2cgZm9yIGxvZ2dpbmcuIiwic291cmNlIjoiQHNpdGUvZG9jcy9Mb2dnaW5nLm1kIiwicGVybWFsaW5rIjoiL2NoZWNrb3V0LXNkay1uZXQvTG9nZ2luZyJ9Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVtdO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgJyIrbmFtZSsiJyB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgVGhlIENoZWNrb3V0LmNvbSBTREsgZm9yIC5ORVQgdXNlcyBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vZGFtaWFuaC9MaWJMb2cifSksYExpYkxvZ2ApLGAgZm9yIGxvZ2dpbmcuIGApLG1keCgicCIsbnVsbCxgTGliTG9nIGlzIGEgbG9nZ2luZyBhYnN0cmFjdGlvbiBkZXNpZ25lZCBzcGVjaWZpY2FsbHkgZm9yIGxpYnJhcnkgZGV2ZWxvcGVycyB3aXRoIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgdHJhbnNwYXJlbnRgKSxgIGJ1aWx0LWluIHN1cHBvcnQgZm9yIE5Mb2csIExvZzROZXQsIFNlcmlsb2csIExvdXBlIGFuZCBjdXN0b20gcHJvdmlkZXJzIGlmIG5lY2Vzc2FyeS5gKSxtZHgoInAiLG51bGwsYEZvciBleGFtcGxlcyBvZiB0aGUgYWJvdmUgbG9nZ2luZyBsaWJyYXJ5IHBsZWFzZSBzZWUgdGhlIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9kYW1pYW5oL0xpYkxvZy90cmVlL21hc3Rlci9zcmMifSksYExpYkxvZyByZXBvc2l0b3J5YCksYC4gT25jZSB5b3UndmUgd2lyZWQgdXAgdGhlIGxvZ2dpbmcgbGlicmFyeSBvZiB5b3VyIGNob2ljZSwgU0RLIHdpbGwgc3RhcnQgbG9nZ2luZyB0byBpdC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Applications/MAMP/htdocs/CKO Files/CKO_Projects/docusaurus/dotnet/docs/Logging.md"],"names":["React","mdx","frontMatter","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"yIACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,EAApB,CACT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,SADgB,CAEtB,iBAAkB,KAFI,CAGtB,QAAS,SAHa,CAItB,cAAe,wDAJO,CAKtB,SAAU,uBALY,CAMtB,YAAa,2BANS,CAAjB,CAQL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,cAAgBJ,IAAhB,CAAuB,0EAApC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,qCAAL,CAA0C,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC5D,OAAQ,mCADoD,CAAtB,EAEnC,QAFmC,CAA1C,CAEqB,gBAFrB,CAFK,CAKL,aAAK,oFAAL,CAAyF,UAAI,UAAU,CAAC,GAAf,EAAqB,aAArB,CAAzF,CAAkI,wFAAlI,CALK,CAML,aAAK,2DAAL,CAAgE,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAClF,OAAQ,mDAD0E,CAAtB,EAEzD,mBAFyD,CAAhE,CAEgC,0FAFhC,CANK,CAAP,CAUD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"id\": \"Logging\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Logging\",\n  \"description\": \"The Checkout.com SDK for .NET uses LibLog for logging.\",\n  \"source\": \"@site/docs/Logging.md\",\n  \"permalink\": \"/checkout-sdk-net/Logging\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The Checkout.com SDK for .NET uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/damianh/LibLog\"\n      }}>{`LibLog`}</a>{` for logging. `}</p>\n    <p>{`LibLog is a logging abstraction designed specifically for library developers with `}<em parentName=\"p\">{`transparent`}</em>{` built-in support for NLog, Log4Net, Serilog, Loupe and custom providers if necessary.`}</p>\n    <p>{`For examples of the above logging library please see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/damianh/LibLog/tree/master/src\"\n      }}>{`LibLog repository`}</a>{`. Once you've wired up the logging library of your choice, SDK will start logging to it.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}